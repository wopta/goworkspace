steps:

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://function-data/env/dev.yaml', '.']
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://core-350507-function-data/env/prod.yaml', '.']
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - '-c'
  - |
    export namefx=( $(grep -Eo '[[:digit:]]+|[^[:digit:]]+' <<<'$TAG_NAME') )
    #Read the string value
    echo $namefx
    read text
    # Set comma as delimiter
    IFS='/'
    #Read the split words into an array based on comma delimiter
    read -a strarr <<< $TAG_NAME
    #Print the splitted words
    echo "namefx : ${strarr[0]}"
    namefx=$strarr[0]

    name_camel=$(sed -r 's/(^|-)(\w)/\U\2/g' <<<"${strarr[0]}")
    echo "namefx camel : ${name_camel}"

    if [[ "${strarr[1]}" == *"dev"* ]]; then
    echo "dev enviroment"
      project=positive-apex-350507
      env=dev
    fi
     if [[ "${strarr[1]}" == *"prod"* ]]; then
    echo "prod enviroment"
      project=core-350507
      env=prod
    fi
        #--ingress-settings internal-only \
    #--timeout=540 \
    # Save a value to persistent volume mount: "/workspace"
    echo $namefx > /workspace/namefx.txt &&
    # Save another
    echo $name_camel > /workspace/entrypoint.txt
    #ls -la
    
    # Copy assets folder from Google Bucket to directory
    if [[ "${strarr[1]}" == *"dev"* ]]; then
    echo "dev enviroment"
      gsutil -m cp -r dir gs://function-data/dev/assets /workspace/tmp/assets/
    fi
     if [[ "${strarr[1]}" == *"prod"* ]]; then
    echo "prod enviroment"
      gsutil -m cp -r dir gs://core-350507-function-data/prod/assets /workspace/tmp/assets/
    fi
    
    gcloud functions deploy ${strarr[0]} \
    --region=europe-west1 \
    --source=/workspace/${strarr[0]} \
    --entry-point=${name_camel} \
    --trigger-http \
    --runtime=go119 \
    --env-vars-file ${env}.yaml \
    --project=${project} 

    
     #gcloud functions add-iam-policy-binding ${strarr[0]} \
    # --region='europe-west1' \
    # --member='serviceAccount:wopta-dev-cloudbuild-sa@positive-apex-350507.iam.gserviceaccount.com' \
    # --role='roles/cloudfunctions.invoker'

  entrypoint: bash

- name: gcr.io/cloud-builders/gcloud:latest
  entrypoint: "ls"
  args: ["-lah","/workspace"]

options:
  logging: CLOUD_LOGGING_ONLY